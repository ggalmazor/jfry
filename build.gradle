def versions = [
    'jetty'    : '9.3.2.v20150730',
    'logback'  : '1.1.3',
    'junit'    : '4.12',
    'javaslang': '2.0.0-beta',
    'assertj'  : '3.1.0',
    'unirest'  : '1.4.7',
    'commonsIo': '2.4',
    'jackson'  : '2.3.2'
]

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'jacoco'
  apply plugin: 'signing'
  sourceCompatibility = 1.8
  archivesBaseName = "jfry"

  group 'com.github.ggalmazor'
  version '0.0.18'

  repositories {
    mavenCentral()
  }

  jacocoTestReport {
    reports {
      xml.enabled = true
      html.enabled = true
    }
  }

  dependencies {
    compile "org.eclipse.jetty:jetty-server:$versions.jetty"
    compile "org.eclipse.jetty:jetty-servlet:$versions.jetty"
    compile "org.eclipse.jetty:jetty-servlets:$versions.jetty"
    compile "ch.qos.logback:logback-classic:$versions.logback"
    compile "com.javaslang:javaslang:$versions.javaslang"
    compile "commons-io:commons-io:$versions.commonsIo"
    testCompile "junit:junit:$versions.junit"
    testCompile "org.assertj:assertj-core:$versions.assertj"
  }

  if (this.hasProperty('profile') && profile == "oss") {
    task javadocJar(type: Jar) {
      classifier = 'javadoc'
      from javadoc
    }

    task sourcesJar(type: Jar) {
      classifier = 'sources'
      from sourceSets.main.allSource
    }

    signing {
      sign configurations.archives
    }

    artifacts {
      archives javadocJar, sourcesJar
    }

    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
          }

          snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
          }

          pom.project {
            name 'JFry'
            packaging 'jar'
            // optionally artifactId can be defined here
            description 'Java Fry is a web library inspired by Sinatra'
            url 'https://github.com/ggalmazor/jfry'

            scm {
              connection 'https://github.com/ggalmazor/jfry.git'
              developerConnection 'https://github.com/ggalmazor/jfry.git'
              url 'https://github.com/ggalmazor/jfry.git'
            }

            licenses {
              license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              }
            }

            developers {
              developer {
                id 'ggalmazor'
                name 'Guillermo Gutierrez'
                email 'ggalmazor@gmail.com'
              }
            }
          }
        }
      }
    }
  }
}

project(':core') {
  archivesBaseName = "core"
}

project(':decorators') {
  archivesBaseName = "decorators"

  dependencies {
    compile project(':core')
    compile "com.fasterxml.jackson.core:jackson-core:$versions.jackson"
    compile "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
  }
}

project(':server') {
  archivesBaseName = "server"
}

project(':server:jetty') {
  archivesBaseName = "jetty"

  dependencies {
    compile project(':core')
    compile "com.mashape.unirest:unirest-java:$versions.unirest"
  }
}





